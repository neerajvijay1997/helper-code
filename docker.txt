install docker
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04
Install docker using apt repository (docker desktop is not required)
https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
To execute docker command without sudo
https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user

ENTER DOCKER CONTAINER
docker exec -it <container_name> bash


PRINT DOCKER LOGS
docker logs -f <container_name>


docker ps
docker ps -a


run the docker container from image
docker run hello-world
-it (Starts an interactive session with the container)



CLEAN UP

STOP ALL CONTAINER
docker stop $(docker ps -q)

REMOVE ALL CONTAINER
docker rm $(docker ps -aq)


docker system prune 
docker image prune
docker volume prune

REMOVE ALL DOCKER VOLUME
docker volume rm $(docker volume ls -q)

REMOVE DOCKER IMAGES
docker rmi -f7 <imageid1>  <imageid2> 

HOW TO SET BUILD CONTEXT WHEN CREATING IMAGE?

docker build -t cerc/secured-finance-watcher-ts:local -f ~/Dockerfile ~/secured-finance-watcher-ts

-t flag > (name:tag format) (here local is tag)
-f flag > location of Dockerfile for building image

~/secured-finance-watcher-ts (imp positional argument) > BUILD CONTEXT > directory from which the Docker daemon will read the files to use during the image build process


HOW TO USE BUILD CONTEXT

Why this?
docker build -t cerc/secured-finance-watcher-ts:local -f ${SCRIPT_DIR}/Dockerfile ${build_command_args} ${CERC_REPO_BASE_DIR}/secured-finance-watcher-ts

WORKDIR /app  (Similar to cd, all subsequent command executed form /app)
COPY . .   (copy items from ${CERC_REPO_BASE_DIR}/secured-finance-watcher-ts build context to /app directory)




docker network
https://docs.docker.com/network/





To run the Docker container and then enter it to execute the pwd command
docker run -it cerc/nitro-contracts:local /bin/bash
Inside the container, run the command: pwd
or 
docker run -it cerc/nitro-contracts:local /bin/bash -c "pwd"



DOCKER NETWORK DEFAULT
containers that are started simultaneously in a Docker Compose file share the same Docker network by default. Docker Compose automatically creates a default network for the services defined in the Compose file, allowing them to communicate with each other using their service names as hostnames
```
version: '3'
services:
  web:
    image: nginx
    ports:
      - "8080:80"
  db:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: example
```
When you run docker-compose up, Docker Compose creates a network for your services. By default, this network is named based on the directory where the Compose file is located, with the suffix _default. All services in the Docker Compose file can communicate with each other over this network. You can reference other containers using their service names defined in the docker-compose.yml file. In this example, the web service can communicate with the db service using the hostname db.



Bind Mounts vs. Docker Volumes
Bind mounts >> directly mount a host directory into your container.
https://spacelift.io/blog/docker-volumes




